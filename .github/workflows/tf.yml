name:  'Terraform'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main  

env: 
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"

jobs:
  dev_terraform:
    runs-on: ubuntu-latest
    name: Terraform
    environment: dev
    steps:
    - name: cleanUp
      run: rm -rf .terraform
      
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform init
      working-directory: "."
      id: init
      run: terraform -chdir=dev init 
       
    - name: Terraform plan
      id: plan
      run: terraform plan -input=false -no-color -var-file="dev/terraform.tfvars" -out tf.plan
      
    - name: Terraform Apply
      run: terraform apply -input=false tf.plan

  qa_terraform:
    runs-on: ubuntu-latest
    name: Terraform
    environment: dev
    needs: dev_terraform
    steps:
    - name: cleanUp
      run: rm -rf .terraform
      
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform init
      working-directory: "."
      id: init
      run: terraform -chdir=qa init 
       
    - name: Terraform plan
      id: plan
      run: terraform plan -input=false -no-color -var-file="qa/terraform.tfvars" -out tf.plan
      
    - name: Terraform Apply
      run: terraform apply -input=false tf.plan